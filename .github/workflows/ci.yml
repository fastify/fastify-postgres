name: CI

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10, 12, 14, 16]

    services:
      postgres:
        image: postgres:11-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
        ports:
        # will assign a random free host port
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    
    steps:
    - uses: actions/checkout@v2.4.0

    - name: Use Node.js
      uses: actions/setup-node@v2.4.1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Dependencies
      run: |
        npm install

    - name: CI environment setup
      run: |
        npm i node-gyp 
        sudo apt-get install -yqq libpq-dev postgresql-client
        chmod 600 .pgpass
        PGPASSFILE=.pgpass psql -h localhost -p ${{ job.services.postgres.ports[5432] }} -d postgres -c 'CREATE TABLE users(id serial PRIMARY KEY, username VARCHAR (50) NOT NULL);' -U postgres

    - name: Check licenses
      run: |
        npm run license-checker --if-present

    - name: Run tests
      run: |
        npm run test:ci

    - name: Coveralls Parallel
      uses: coverallsapp/github-action@1.1.3
      with:
        github-token: ${{ secrets.github_token }}
        parallel: true
        flag-name: run-${{ matrix.node-version }}-${{ matrix.os }}

  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  automerge:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: fastify/github-action-merge-dependabot@v2.5.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
